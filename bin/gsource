#!/bin/sh
# Copyright (C) 2020 Martin Edstr√∂m

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.



# This turned into an exercise in POSIX sh. I am keeping it this way because it
# is reference material to me, but next time I will just use Scheme or Fish.

# shellcheck source=/home/kept/Dotfiles/.profile

# The above must be a hard path for now. I would like it to be ~/.profile.
# Ticket at https://github.com/koalaman/shellcheck/issues/507.

# Alternative to realpath() that won't resolve to a /gnu/store item because it
# doesn't traverse symlinks, just uses pwd(1).
fullpath() { echo "$(cd "$(dirname "$1")" && pwd)/$(basename "$1")" ; }

# If given no argument, source the current profile (hopefully ~/.guix-profile).
[ $# -eq 0 ] && . "$GUIX_PROFILE/etc/profile" &&\
        echo "Sourced $GUIX_PROFILE" && exit

# If given a single directory, assume that's a profile and source it.
[ $# -eq 1 ] && [ -d "$1" ] && GUIX_PROFILE="$1" && . "$1/etc/profile" && \
        echo "Sourced $(fullpath "$1")" && exit

# Otherwise, look in EXTRA_PROFILES, sourcing the given names. If given the
# argument "all", source them all.
[ "$1" = "all" ] && ARGS=$(ls "$EXTRA_PROFILES") || ARGS="$*"
for PROFILE in $ARGS; do
        GUIX_PROFILE="$EXTRA_PROFILES/$PROFILE/$PROFILE"
        [ -f "$GUIX_PROFILE/etc/profile" ] && . "$GUIX_PROFILE/etc/profile"
        [ $? = 0 ] && echo "Sourced $GUIX_PROFILE"
done
